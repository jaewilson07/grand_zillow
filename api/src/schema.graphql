type Query {
  propertyInPolygon(latitude: Float, longitude: Float): [property]
    @cypher(
      statement: """
      MATCH (p:property) WHERE EXISTS (p.polygon)
      AND spatial.algo.withinPolygon(Point({latitude:$latitude ,  longitude:$longitude }), p.polygon)
      RETURN p
      """
    )

  propertyCount: Int @cypher(statement: "MATCH (p:property) RETURN Count(p)")

  cityValues: [cityValue]
    @cypher(
      statement: """
      MATCH (c:city) <- [:IN_CITY] - (p:property)
      WHERE EXISTS(p.TotalValue)
      WITH c.name as city, avg(p.TotalValue) as average
      RETURN {city: city, average: average } as obj
      """
    )
}

extend type city {
  avgValue: Float
    @cypher(
      statement: """
      MATCH (this) <-[:IN_CITY]-(p:property) RETURN avg(p.TotalValue)
      """
    )
}

extend type property {
  estimatedSalesPrice: Int
    @cypher(statement: "RETURN toInteger(this.TotalValue * 1.2)")

  photos(radius: Int = 2000, limit: Int = 10): [photo] @ignore
}

type appraisal {
  _id: String!
  building: Int!
  land: Int!
  property_id: String!
  total: Int!
  year: Int!
  propertys: [property] @relationship(type: "HAS_APPRAISAL", direction: IN)
}

type city {
  _id: String!
  name: String!
  propertys: [property] @relationship(type: "IN_CITY", direction: IN)
}

type cityValue {
  city: String
  average: Float
}

type neighborhood {
  _id: String!
  name: String!
  propertys: [property] @relationship(type: "IN_NEIGHBORHOOD", direction: IN)
}

type photo {
  _id: String!
  id: String!
  url: String
  captured_at: Float
  sequence: String
}

type property {
  _id: String!
  AddressL_1: String
  AddressLin: String
  Assessment: String
  COUNTYCD: Int!
  CareOfTaxp: String
  Certificat: String
  CityStateZ: String
  Continuous: Float!
  CountyAbbr: String!
  CountyName: String!
  DbaName: String
  FallowAcre: Float!
  FarmsiteAc: Float!
  ForestAcre: Float!
  GISAcres: Float!
  GrazingAcr: Float!
  IrrigatedA: Float!
  LegalDescr: String
  LevyDistri: String
  NonQualAcr: Float!
  OwnerAdd_1: String
  OwnerAdd_2: String
  OwnerAddre: String
  OwnerCity: String
  OwnerName: String
  OwnerState: String
  OwnerZipCo: String
  PropType: String
  PropertyID: Int!
  Range: String
  Section: String
  Shape_Area: Float!
  Shape_Leng: Float!
  Subdivisio: String
  TaxYear: Int!
  TotalAcres: Float!
  TotalBuild: Int!
  TotalLandV: Int!
  TotalValue: Int!
  Township: String
  WildHayAcr: Float!
  acres: Int
  address: String
  bedrooms: Int
  category: String
  full_baths: Int
  half_baths: Int
  heating: String
  id: String!
  location: Point
  lot_size: Int
  polygon: [Point]
  sqft: Int
  style: String
  year_built: Int
  in_city: [city] @relationship(type: "IN_CITY", direction: OUT)
  in_subdivision: [subdivision]
    @relationship(type: "IN_SUBDIVISION", direction: OUT)
  in_neighborhood: [neighborhood]
    @relationship(type: "IN_NEIGHBORHOOD", direction: OUT)
  has_appraisal: [appraisal]
    @relationship(type: "HAS_APPRAISAL", direction: OUT)
}

type subdivision {
  _id: String!
  name: String!
  propertys: [property] @relationship(type: "IN_SUBDIVISION", direction: IN)
}
